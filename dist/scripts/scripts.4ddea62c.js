"use strict";angular.module("casUiServiceApp",["cas.decorators","cas.auth","cas.modals","cas.theme","cas.states","cas.menu","apiRoutes","appEvents","md.data.table","cas.file","angularTreeview","mgo-angular-wizard","angular-timeline","md-steppers"]),"localhost"!==document.location.hostname||"9000"!==document.location.port&&"9050"!==document.location.port||(angular.module("casUiServiceApp").requires.push("mockData"),console.log("PUSHED MOCK DATA IN MODULE ARRAY!!!!")),angular.module("casUiServiceApp").factory("JSZip",["$window",function($window){return $window.JSZip}]),angular.module("cas.auth",["angular-storage"]).config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push("APIInterceptor")}]).run(["$rootScope","$state","$location","Authorization","loginModal","APP_EVENTS",function($rootScope,$state,$location,Authorization,loginModal,APP_EVENTS){var loginRedirect,routeChangeRequiredAfterLogin=!1;$rootScope.$on(APP_EVENTS.state_events.stateChangeStart,function(event,toState,toParams,fromState,fromParams){var authorised,stateData=toState.data;void 0!==stateData&&void 0!==stateData.access&&(authorised=Authorization.authorize(stateData.access.loginRequired,stateData.access.permissions,stateData.access.permissionCheckType,toParams),1===authorised?(event.preventDefault(),routeChangeRequiredAfterLogin=!0,loginRedirect={state:toState,params:toParams},$state.go("login").then(function(){$rootScope.$broadcast(APP_EVENTS.state_events.stateChangeSuccess,toState,toParams,fromState,fromParams)})):2===authorised?(event.preventDefault(),loginModal.show("Attention","You are not authorized to get here").then(function(){$state.go("login")})):routeChangeRequiredAfterLogin&&"/login"!==toState.url&&(routeChangeRequiredAfterLogin=!1,$state.transitionTo(loginRedirect.state,loginRedirect.params).then(function(){$rootScope.$broadcast(APP_EVENTS.state_events.stateChangeSuccess,toState,toParams,fromState,fromParams)})))}),$rootScope.$on("token-expired",function(){$state.go("logout")})}]),angular.module("cas.auth").service("APIInterceptor",["$rootScope","UserService",function($rootScope,UserService){var service=this;service.response=function(response){var headers=response.headers();return void 0!==headers.iw_app_user_data&&UserService.setCurrentUser(JSON.parse(headers.iw_app_user_data)),response},service.responseError=function(response){if(400===response.status&&"invalid token"===response.data&&$rootScope.$broadcast("token-expired"),403===response.status){var headers=response.headers();void 0!==headers.iw_app_user_data&&UserService.setCurrentUser(JSON.parse(headers.iw_app_user_data))}return response}}]),angular.module("cas.theme",["ngMaterial","ngAnimate","ngAria","ngMessages","ngSanitize"]).config(["$mdThemingProvider",function($mdThemingProvider){var thdOrangeMap=$mdThemingProvider.extendPalette("orange",{500:"f96302",900:"00af4d",contrastDefaultColor:"light"});$mdThemingProvider.definePalette("thd-orange",thdOrangeMap);var thdPalette=$mdThemingProvider.extendPalette("grey",{500:"2b3134"});$mdThemingProvider.definePalette("thd-grey",thdPalette),$mdThemingProvider.theme("default").primaryPalette("thd-grey",{"default":"900","hue-3":"500"}).accentPalette("thd-orange",{"default":"500","hue-1":"900"}).warnPalette("red")}]),angular.module("cas.states",["ngMaterial","ui.router"]).config(["$urlRouterProvider","$stateProvider",function($urlRouterProvider,$stateProvider){$urlRouterProvider.otherwise(function(){return"/webstore/apps"}),$stateProvider.state({name:"common","abstract":!0,templateUrl:"views/_common.html",controller:"CommonCtrl"}),$stateProvider.state("common.webstore",{"abstract":!0,url:"/webstore",template:"<div ui-view ></div>",controller:["$scope","webstoreService","$log","$mdDialog",function($scope,webstoreService,$log,$mdDialog){function GetActiveApps(){webstoreService.getActiveApps().then(function(data){$scope.buildPackages=data,console.log(data)},function(error){$log.error(error)})}$scope.showNewAppDialog=function(){$mdDialog.show({templateUrl:"views/app-creation/new-app.html",controller:"NewAppController",controllerAs:"vm",resolve:{spaces:["webstoreService",function(webstoreService){return webstoreService.getNonPromotedSpaces("")}]},data:{access:{loginRequired:!0,permissions:["admin"],permissionCheckType:0}},parent:angular.element(document.body),clickOutsideToClose:!0}).then(function(answer){GetActiveApps()})},GetActiveApps()}]}),$stateProvider.state("common.admin",{url:"/admin","abstract":!0,template:"<div ui-view ></div>",controller:["$scope","$log",function($scope,$log){$scope.title="Administration"}]}),$stateProvider.state("common.admin.credentials",{url:"/creds",templateUrl:"views/googlecreds.html",controller:"credEditorCtrl",data:{pageTitle:"Credential Editor",access:{loginRequired:!0,permissions:["admin"],permissionCheckType:0}}}),$stateProvider.state("common.admin.create-app",{url:"/apps/create",templateUrl:"views/app-creation/new-app.html",controller:"NewAppController",controllerAs:"vm",resolve:{spaces:["webstoreService",function(webstoreService){return webstoreService.getNonPromotedSpaces("")}]},data:{access:{loginRequired:!0,permissions:["admin"],permissionCheckType:0}}}),$stateProvider.state("common.admin.user-roles",{url:"/user-roles",templateUrl:"views/members.html",controller:"UserRolesController",controllerAs:"vm",resolve:{roles:function(){return["Admin","Promoter","Scheduler","Viewer"]},apps:["webstoreService",function(webstoreService){return webstoreService.getActiveApps()}],spaces:["webstoreService",function(webstoreService){return webstoreService.getNonPromotedSpaces("")}]},data:{access:{loginRequired:!0,permissions:["admin"],permissionCheckType:0}}}),$stateProvider.state("common.webstore.apps",{url:"/apps",templateUrl:"views/webstore-view.html",data:{pageTitle:"Chrome Test",access:{loginRequired:!0,permissionCheckType:"0"}},controller:["$scope",function($scope){$scope.$parent.title="Home Depot Store Apps"}]}),$stateProvider.state("common.webstore.builds",{url:"/apps/:appId",templateUrl:"views/build-view.html",controller:"BuildController",controllerAs:"vm",resolve:{appId:["$stateParams",function($stateParams){return $stateParams.appId}]},data:{access:{loginRequired:!0,permissions:["viewer","promoter","scheduler","admin"],permissionCheckType:0}}}),$stateProvider.state("login",{controller:"LoginController",url:"/login",controllerAs:"vm",templateUrl:"views/login.html"}),$stateProvider.state("logout",{controller:["UserService","$state",function(UserService,$state){UserService.setCurrentUser(),$state.go("common.webstore.apps")}],url:"/logout"}),$stateProvider.state({name:"unauthorized",url:"/unauthorized",onEnter:["$stateParams","$state","$mdDialog",function($stateParams,$state,$mdDialog){var alert=$mdDialog.alert({title:"Unauthorized",textContent:"You are not authorized to execute this!",ok:"Close"});$mdDialog.show(alert)["finally"](function(){alert=void 0})}]})}]),angular.module("cas.menu",["ngMaterial","ui.router","sasrio.angular-material-sidenav"]).config(["ssSideNavSectionsProvider","$mdThemingProvider",function(ssSideNavSectionsProvider,$mdThemingProvider){ssSideNavSectionsProvider.initWithTheme($mdThemingProvider),ssSideNavSectionsProvider.initWithSections([{id:"cas_link",name:"Chrome App Server",type:"toggle",pages:[{id:"webstore_link",name:"Applications",state:"common.webstore.apps",type:"link"}]},{id:"cas_management",name:"Management",type:"toggle",pages:[{id:"cred_editor",name:"Credential Editor",type:"link",state:"common.admin.credentials"},{id:"roles_management",name:"User Roles Management",type:"link",state:"common.admin.user-roles"}]},{id:"cas_link",name:"Sign Out",type:"link",visible:!0,icon:"fa fa-sign-out",state:"logout"}])}]),angular.module("cas.modals",["ngMaterial"]).service("loginModal",["$mdDialog","$rootScope","$q",function($mdDialog,$rootScope,$q){var show=function(title,content){var defer=$q.defer();return $mdDialog.show($mdDialog.alert({title:content,ok:"Ok"})).then(function(){defer.resolve()}),defer.promise};return{show:show}}]),angular.module("cas.decorators",[]).config(["$provide","$httpProvider",function($provide,$httpProvider){$httpProvider.interceptors.push(["$q",function($q){return{response:function(response){return $q.resolve(response)},responseError:function(rejection){return rejection.status<=0&&(rejection.data=new Error("Unable to connect to the endpoint")),$q.reject(rejection)}}}]),$provide.decorator("$log",["$delegate","$injector","API_ROUTES",function($delegate,$injector,API_ROUTES){return new HttpLogger($injector,$delegate,API_ROUTES)}])}]);var apiRoutes={schedule_api:{getSchedule:"/api/comm/iws-cas-core/request/iw-cas-schedule/get-schedule",getBuildSchedules:"/api/comm/iws-cas-core/request/iw-cas-schedule/get-build-schedules",newScheduleEvent:"/api/comm/iws-cas-core/request/iw-cas-schedule/add-new",updateScheduleEvent:"/api/comm/iws-cas-core/request/iw-cas-schedule/update"},users_api:{getUserRoles:"api/comm/iws-cas-core/request/iw-cas-user-roles/get-user-roles",findUsers:"api/comm/iws-cas-core/request/iw-cas-user-roles/find-users",saveUserRole:"api/comm/iws-cas-core/request/iw-cas-user-roles/add-new",deleteUserRole:"api/comm/iws-cas-core/check/iw-cas-user-roles/delete"},promotion_api:{promoteBuild:"/api/comm/iws-cas-core/request/iw-cas-promotion/promote-build"},auth_api:{authenticate:"/api/comm/iws-cas-core/request/iw-auth/authenticate"},google_api:{getGoogleAuthKey:"/api/comm/iws-cas-core/ask/iw-google-api-auth/get-auth-key",setGoogleAuthKey:"/api/comm/iws-cas-core/check/iw-google-api-auth/set-auth-key",getDirectoryTree:"/api/comm/iws-cas-core/request/iw-google-api-admin-dir-org-units/list-org-units"},core_api:{log:"/api/comm/iws-cas-core/inform/iw-log/log",newChromeApp:"/api/comm/iws-cas-core/request/iw-cas-data-store/new-chrome-app",getNonPromotedSpaces:"/api/comm/iws-cas-core/request/iw-cas-data-store/get-non-promoted-spaces",getPromotedSpaces:"/api/comm/iws-cas-core/request/iw-cas-data-store/get-promoted-spaces",getActiveApps:"/api/comm/iws-cas-core/ask/iw-cas-data-store/get-active-apps",getBuilds:"/api/comm/iws-cas-core/request/iw-cas-data-store/get-app-builds",getDetailedApp:"/api/comm/iws-cas-core/request/iw-cas-data-store/get-detailed-app",getBuildTimeline:"/api/comm/iws-cas-core/request/iw-cas-data-store/get-build-timeline",getAppTimeline:"api/comm/iws-cas-core/request/iw-cas-data-store/get-app-timeline"}};angular.module("apiRoutes",[]).constant("API_ROUTES",apiRoutes);var appEvents={auth_events:{currentUserChanged:"CURRENT_USER_CHANGED"},state_events:{stateChangeStart:"$stateChangeStart",stateChangeSuccess:"$stateChangeSuccess"}};angular.module("appEvents",[]).constant("APP_EVENTS",appEvents),angular.module("mockData",["ngMockE2E","apiRoutes"]),angular.module("mockData").run(["$httpBackend","API_ROUTES",function($httpBackend,API_ROUTES){$httpBackend.whenPOST(API_ROUTES.auth_api.authenticate).respond(function(method,url,data){data=JSON.parse(data);var request=new XMLHttpRequest;request.open("GET","/mock-data/users.json",!1),request.send(null);var result=_.find(JSON.parse(request.response),function(app){return app.username===data.username});return[request.status,{},{iw_app_user_data:JSON.stringify(result)}]}),$httpBackend.whenPOST(API_ROUTES.users_api.findUsers).respond(function(method,url,data){data=JSON.parse(data);var request=new XMLHttpRequest;request.open("GET","/mock-data/users.json",!1),request.send(null);var result=_.find(JSON.parse(request.response),function(app){return app.username.startsWith(data.username)});return[request.status,result,{}]}),$httpBackend.whenPOST(API_ROUTES.users_api.getUserRoles).respond(function(method,url,data){data=JSON.parse(data);var request=new XMLHttpRequest;request.open("GET","/mock-data/users.json",!1),request.send(null);var result=_.find(JSON.parse(request.response),function(app){return app.username.startsWith(data.username)});return[request.status,result,{}]}),$httpBackend.whenPOST(API_ROUTES.users_api.saveUserRole).respond(function(method,url,data){return data=JSON.parse(data),[200,{},{}]}),$httpBackend.whenPOST(API_ROUTES.core_api.log).respond({message:"logged"}),$httpBackend.whenPOST(API_ROUTES.core_api.getDetailedApp).respond(function(method,url,data){var request=new XMLHttpRequest;request.open("GET","/mock-data/detailed-apps.json",!1),request.send(null);var result=_.find(JSON.parse(request.response),function(app){return app.appId===JSON.parse(data).appId});return[request.status,result,{}]}),$httpBackend.whenPOST(API_ROUTES.core_api.getBuilds).respond(function(method,url,data){var request=new XMLHttpRequest;request.open("GET","/mock-data/builds.json",!1),request.send(null);var result=_.filter(angular.fromJson(request.response),function(build){return build.appId==JSON.parse(data).appId});return[request.status,result,{}]}),$httpBackend.whenGET(API_ROUTES.core_api.getActiveApps).respond(function(method,url,data){var request=new XMLHttpRequest;return request.open("GET","/mock-data/apps.json",!1),request.send(null),[request.status,request.response,{}]}),$httpBackend.whenPOST(API_ROUTES.core_api.getNonPromotedSpaces).respond(function(method,url,data){var request=new XMLHttpRequest;return request.open("GET","/mock-data/spaces.json",!1),request.send(null),[request.status,request.response,{}]}),$httpBackend.whenPOST(API_ROUTES.core_api.getPromotedSpaces).respond(function(method,url,data){var request=new XMLHttpRequest;return request.open("GET","/mock-data/spaces.json",!1),request.send(null),[request.status,request.response,{}]}),$httpBackend.whenPOST(API_ROUTES.core_api.getBuildTimeline).respond(function(method,url,data){var request=new XMLHttpRequest;return request.open("GET","/mock-data/build-timeline.json",!1),request.send(null),[request.status,request.response,{}]}),$httpBackend.whenPOST(API_ROUTES.promotion_api.promoteBuild).respond(function(method,url,data){var parsedData=JSON.parse(data),promoteBuild={buildId:parsedData.buildId,toSpaceId:parsedData.toSpaceId};return[200,[promoteBuild],{}]}),$httpBackend.whenPOST(API_ROUTES.schedule_api.newScheduleEvent).respond(function(method,url,data){var parsedData=JSON.parse(data),scheduleEvent={scheduledDate:parsedData.scheduledDate,schedulerId:parsedData.schedulerId,buildId:parsedData.buildId,scheduleEventId:Date.now().toString(),orgUnit:parsedData.orgUnit};return[200,scheduleEvent,{}]}),$httpBackend.whenPOST(API_ROUTES.schedule_api.updateScheduleEvent).respond(function(method,url,data){return data.buildId=1,[200,data,{}]}),$httpBackend.whenPOST(API_ROUTES.google_api.setGoogleAuthKey).respond(function(){return[200,{},null]}),$httpBackend.whenPOST(API_ROUTES.google_api.getDirectoryTree).respond(function(method,url,data){var request=new XMLHttpRequest;return request.open("GET","/mock-data/organization.json",!1),request.send(null),[request.status,request.response,{}]}),$httpBackend.whenGET("/mock-data/detailed-apps.json").passThrough(),$httpBackend.whenGET("/mock-data/organization.json").passThrough(),$httpBackend.whenGET("/mock-data/builds.json").passThrough(),$httpBackend.whenGET("/mock-data/apps.json").passThrough(),$httpBackend.whenGET("/mock-data/spaces.json").passThrough(),$httpBackend.whenGET("/mock-data/users.json").passThrough(),$httpBackend.whenGET("/mock-data/build-timeline.json").passThrough(),$httpBackend.whenGET(/views/).passThrough(),$httpBackend.whenGET(/directive/).passThrough()}]);var cas;!function(cas){var module;!function(module){var BaseController=function(){function BaseController(){}return BaseController.prototype.ClickElement=function(id){document.getElementById(id).click()},BaseController}();module.BaseController=BaseController}(module=cas.module||(cas.module={}))}(cas||(cas={})),angular.module("casUiServiceApp").controller("CommonCtrl",["$scope","$mdSidenav","ssSideNav","UserService",function($scope,$mdSidenav,ssSideNav,UserService){function refreshRoles(user){void 0!=user&&null!==user&&($scope.userRoles=_.uniq(_.pluck(user.authorization.user.roles,"name")))}$scope.onClickMenu=function(){$mdSidenav("left").toggle()},$scope.menu=ssSideNav;var user=UserService.getCurrentUser();refreshRoles(user),UserService.subscribe($scope,function(){var user=UserService.getCurrentUser();refreshRoles(user)})}]),function(){function LoginController($location,$scope,Authentication,UserService){function activate(){null!==UserService.getCurrentUser()&&$location.url("/")}function login(){vm.isBusy=!0,Authentication.authenticate(vm.email,vm.password).then(function(user){UserService.setCurrentUser(user),$location.path("/")},function(){vm.invalidLogin=!0,vm.isBusy=!1})}var vm=this;vm.isBusy=!1,vm.login=login,activate()}angular.module("casUiServiceApp").controller("LoginController",LoginController),LoginController.$inject=["$location","$scope","Authentication","UserService"]}();var BuildController=function(){function BuildController(appId,$mdDialog,webstoreService){var _this=this;this.appId=appId,this.$mdDialog=$mdDialog,this.webstoreService=webstoreService,this.img="",this.loadImg=function(){if(_this.appDetails.image){var bytes=_this.appDetails.image;if(void 0!=bytes.data){var blob=new Blob([new Uint8Array(_this.appDetails.image.data)],{type:"image/png"});_this.img=URL.createObjectURL(blob)}else _this.img=bytes}},this.OnReorder=function(query,order){angular.extend({},query,{order:order})},this.OnPaginate=function(query,page,limit){angular.extend({},query,{page:page,limit:limit})},this.query={order:"",limit:5,page:1},this.adQuery={order:"",limit:5,page:1},this.GetBuilds(this.query),this.GetAppDetails()}return BuildController.$inject=["appId","$mdDialog","webstoreService"],BuildController.prototype.IsPast=function(time){return Date.now()>time},BuildController.prototype.GetAppDetails=function(){var _this=this;this.webstoreService.getAppDetails(this.appId).then(function(data){_this.appDetails=data,_this.loadImg()})},BuildController.prototype.GetBuilds=function(query){var _this=this;this.webstoreService.getBuildPackages(this.appId).then(function(buildsList){_this.Success(buildsList)})},BuildController.prototype.Success=function(buildsList){this.buildsList=buildsList},BuildController.prototype.ShowTimeline=function(build){this.$mdDialog.show({controller:function(timeline,$mdDialog){this.timeline=timeline,this.Cancel=function(){console.log("cancel"),$mdDialog.cancel()}},controllerAs:"vm",templateUrl:"views/timeline-modal.html",resolve:{timeline:function(webstoreService){return webstoreService.getBuildTimeline(build.buildId)}},clickOutsideToClose:!0})},BuildController.prototype.ShowScheduleDialog=function(ev,build){var _this=this;this.$mdDialog.show({controller:"ScheduleModalController",controllerAs:"vm",templateUrl:"views/scheduler-modal.html",locals:{appName:this.appDetails.appName,buildVersion:build.version,formData:{buildId:build.buildId,appId:build.appId,userId:"axd8012"}},resolve:{spaces:function(webstoreService){return webstoreService.getPromotedSpaces(build.buildId)}},targetEvent:ev,clickOutsideToClose:!1}).then(function(answer){_this.GetAppDetails(),_this.GetBuilds(_this.query)})},BuildController.prototype.ShowPromotionDialog=function(ev,build){this.$mdDialog.show({controller:"PromotionModalController",controllerAs:"vm",templateUrl:"views/promotion-modal.html",locals:{build:build},resolve:{spaces:function(webstoreService){return webstoreService.getNonPromotedSpaces(build.buildId)},promotedSpaces:function(webstoreService){return webstoreService.getPromotedSpaces(build.buildId)}},targetEvent:event,clickOutsideToClose:!1}).then(function(answer){console.log(answer)})["catch"](function(e){console.log(e)})},BuildController}();angular.module("casUiServiceApp").controller("BuildController",BuildController);var ScheduleModalController=function(){function ScheduleModalController($scope,$q,locals,spaces,$mdDialog,webstoreService,directoryService,scheduleService){this.$scope=$scope,this.$q=$q,this.locals=locals,this.spaces=spaces,this.$mdDialog=$mdDialog,this.webstoreService=webstoreService,this.directoryService=directoryService,this.scheduleService=scheduleService,this.enableNextStep=function(){this.selectedStep>=this.stepData.length||(this.selectedStep===this.stepProgress-1&&(this.stepProgress=this.stepProgress+1),this.selectedStep=this.selectedStep+1)},this.schedulerModal=!0,this.formData=locals.formData,this.formData.scheduleType="now",this.formData.scheduleEventDate=null,this.locals.directoryTree=[],this.locals.spaces=spaces,this.selectedStep=0,this.stepProgress=1,this.stepData=[{step:1,completed:!1,optional:!1,data:{}},{step:2,completed:!1,optional:!1,data:{}},{step:3,completed:!1,optional:!1,data:{}}]}return ScheduleModalController.$inject=["$scope","$q","locals","spaces","$mdDialog","webstoreService","directoryService","scheduleService"],ScheduleModalController.prototype.moveToPreviousStep=function(){this.selectedStep>0&&(this.selectedStep=this.selectedStep-1)},ScheduleModalController.prototype.submitCurrentStep=function(stepData,isSkip){var _this=this;this.$q.defer();if(console.log("On before submit"),stepData.completed||isSkip)this.enableNextStep();else if(1==stepData.step&&(this.directoryService.getOuTree(this.formData.selectedSpaceId).then(function(directoryTree){_this.locals.directoryTree=[directoryTree]}),stepData.completed=!0,this.enableNextStep()),2==stepData.step){if(this.formData.targetOrgUnit=this.$scope.tv1.currentNode.orgUnitPath,void 0==this.formData.targetOrgUnit)return;this.minDate=new Date(Date.now()),this.focusedTime=!1,this.failMessage=!1,this.enableNextStep()}},ScheduleModalController.prototype.Schedule=function(){var _this=this;this.formData.scheduleEventDate=new Date("now"==this.formData.scheduleType?new Date(Date.now()+6e3).toString():this.formData.scheduleEventDate);var newScheduleEventCommand={buildId:this.formData.buildId,schedulerId:this.formData.userId,scheduledDate:this.formData.scheduleEventDate.getTime(),orgUnit:this.formData.targetOrgUnit,spaceId:this.formData.selectedSpaceId,appId:this.formData.appId};this.scheduleService.addSchedule(newScheduleEventCommand).then(function(res){_this.Close(),console.info("You scheduled a new event: ",res)})["catch"](function(e){403===e.status?_this.errorMsg="You are not authorized to schedule deployments":_this.errorMsg=e.data.message})},ScheduleModalController.prototype.NextStep=function(){},ScheduleModalController.prototype.Close=function(){this.failMessage?this.$mdDialog.cancel():this.$mdDialog.hide()},ScheduleModalController}();angular.module("casUiServiceApp").controller("ScheduleModalController",ScheduleModalController);var cas;!function(cas){var module;!function(module){var PromotionModalController=function(){function PromotionModalController(locals,promotedSpaces,spaces,$mdDialog,promotionService){this.locals=locals,this.promotedSpaces=promotedSpaces,this.spaces=spaces,this.$mdDialog=$mdDialog,this.promotionService=promotionService}return PromotionModalController.$inject=["locals","promotedSpaces","spaces","$mdDialog","promotionService"],PromotionModalController.prototype.Promote=function(){var _this=this;this.promotionService.promoteBuild({buildId:this.locals.build.buildId,toSpaceId:this.selectedSpaceId}).then(function(res){_this.$mdDialog.cancel()})["catch"](function(e){console.log(e)})},PromotionModalController.prototype.Cancel=function(){this.$mdDialog.cancel()},PromotionModalController}();angular.module("casUiServiceApp").controller("PromotionModalController",PromotionModalController)}(module=cas.module||(cas.module={}))}(cas||(cas={}));var __extends=this&&this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},cas;!function(cas){var module;!function(module){var NewAppController=function(_super){function NewAppController(spaces,JSZipUtil,$mdDialog,webstoreService){var _this=this;_super.call(this),this.spaces=spaces,this.JSZipUtil=JSZipUtil,this.$mdDialog=$mdDialog,this.webstoreService=webstoreService,this.ShowContent=function(fileContent){var manifest=_this.JSZipUtil.extractAndParseZip(fileContent,"manifest.json");if(null==manifest)_this.error="Unable to locate a valid manifest.json";else{var buffer=_this.JSZipUtil.extractAndParseZip(fileContent,manifest.icons[128]);_this.LoadImg(buffer),_this.app.appName=manifest.name,_this.app.description=manifest.description,_this.fileLoaded=!0}},this.fileLoaded=!1}return __extends(NewAppController,_super),NewAppController.$inject=["spaces","JSZipUtil","$mdDialog","webstoreService"],NewAppController.prototype.NewChromeApp=function(){var _this=this,chromeApp={appName:this.app.appName,defaultSpaceId:this.app.defaultSpaceId,image:this.base64Image,description:this.app.description};this.webstoreService.newChromeApp(chromeApp).then(function(res){console.log(res),_this.$mdDialog.hide(res)})["catch"](function(e){console.error(e),_this.$mdDialog.cancel()})},NewAppController.prototype.LoadImg=function(buffer){var view=new Uint8Array(buffer),blob=new Blob([view],{type:"image/png"});this.app.image=URL.createObjectURL(blob),this.base64Image=btoa(String.fromCharCode.apply(null,view))},NewAppController.prototype.ResetForm=function(){this.fileLoaded=!1,this.app={appId:null,appName:"Untitled App",description:null,defaultSpaceId:null,image:null}},NewAppController.prototype.Cancel=function(){this.$mdDialog.cancel()},NewAppController}(module.BaseController);angular.module("casUiServiceApp").controller("NewAppController",NewAppController)}(module=cas.module||(cas.module={}))}(cas||(cas={}));var UserRolesController=function(){function UserRolesController(roles,apps,spaces,$q,UserService,userRolesService,$mdToast){var _this=this;this.roles=roles,this.apps=apps,this.spaces=spaces,this.$q=$q,this.UserService=UserService,this.userRolesService=userRolesService,this.$mdToast=$mdToast,this.findUsers=function(searchTerm){var deferred=_this.$q.defer();return _this.userRolesService.getUsers(searchTerm).then(function(res){var currentUser=_this.UserService.getCurrentUser(),result=_.filter(res,function(user){return user.username!==currentUser.username});deferred.resolve(result)}),deferred.promise},this.getUserRoles=function(user){_this.userRolesService.getUserRoles(user).then(function(res){var groupedUserRoles=_.groupBy(res,"name"),data=_.map(groupedUserRoles,function(group){return{name:group[0].name,elements:group}});_this.userRoles=data})},this.getAppName=function(appId){var result=_.find(_this.apps,function(app){return app.appId===appId});return void 0!==result?result.appName:"All Apps"},this.getSpaceName=function(spaceId){var result=_.find(_this.spaces,function(space){return space.spaceId===spaceId});return void 0!==result?result.name:"All Spaces"},this.saveUserRole=function(){var userRole={username:_this.user.username,role:_this.newUserRole.role.toLowerCase(),appId:_this.newUserRole.appId,spaceId:_this.newUserRole.spaceId};_this.userRolesService.saveUserRole(userRole).then(function(res){console.log("userRole Saved"),_this.showToast("Your new role has been saved!"),_this.newUserRole=null,_this.getUserRoles(_this.user.username)})},this.removeUserRole=function(userRoleId){_this.userRolesService.deleteUserRole(userRoleId).then(function(res){_this.showToast("Your role has been removed!"),_this.getUserRoles(_this.user.username)})},this.userRoles=[],this.user=null,this.newUserRole=null,this.readOnly=!0,this.last={bottom:!1,top:!0,left:!1,right:!0}}return UserRolesController.$inject=["roles","apps","spaces","$q","UserService","userRolesService","$mdToast"],UserRolesController.prototype.showToast=function(message){this.$mdToast.show(this.$mdToast.simple().content(message).position(this.getToastPosition()).hideDelay(3e3))},UserRolesController.prototype.getToastPosition=function(){this.toastPosition=angular.extend({},this.last);var toastPos=this.toastPosition;return Object.keys(this.toastPosition).filter(function(pos){return toastPos[pos]}).join(" ")},UserRolesController}();angular.module("casUiServiceApp").controller("UserRolesController",UserRolesController);var WebstoreTileController=function(){function WebstoreTileController($state,$scope){var _this=this;this.$scope=$scope,this.loadImg=function(){if(_this.Tile.image){if(!_this.Tile.image.data)return void(_this.img=_this.Tile.image);var blob=new Blob([new Uint8Array(_this.Tile.image.data)],{type:"image/png"});_this.img=URL.createObjectURL(blob)}},$scope.vm=this,this.stateService=$state,this.Tile=$scope.tile,this.img="../images/thdManagement-220x140.968dbe9f.png",this.loadImg()}return WebstoreTileController.$inject=["$state","$scope"],WebstoreTileController}();angular.module("casUiServiceApp").directive("webstoreTile",function(){return{templateUrl:"views/webstore-tile-small.html",restrict:"E",scope:{tile:"="},controller:WebstoreTileController,controllerAs:"vm"}});var WebstoreService=function(){function WebstoreService($http,$q,$log,API_ROUTES){this.$http=$http,this.$q=$q,this.$log=$log,this.API_ROUTES=API_ROUTES}return WebstoreService.$inject=["$http","$q","$log","API_ROUTES"],WebstoreService.prototype.newChromeApp=function(app){var _this=this,deferred=this.$q.defer();return this.$log.info("getting build packages from service"),this.$http.post(this.API_ROUTES.core_api.newChromeApp,app).then(function(response){deferred.resolve(response.data)},function(e){_this.$log.error(e.message,e.name),deferred.reject(e)}),deferred.promise},WebstoreService.prototype.getBuildPackages=function(appId){var _this=this,deferred=this.$q.defer();return this.$log.info("getting build packages from service"),this.$http.post(this.API_ROUTES.core_api.getBuilds,{appId:appId}).then(function(response){deferred.resolve(response.data)},function(e){_this.$log.error(e.message,e.name),deferred.reject(e)}),deferred.promise},WebstoreService.prototype.getActiveApps=function(){var deferred=this.$q.defer();return this.$log.info("getting active apps"),this.$http.get(this.API_ROUTES.core_api.getActiveApps).then(function(response){deferred.resolve(response.data)})["catch"](function(e){console.error(e),deferred.reject(e)}),deferred.promise},WebstoreService.prototype.getAppDetails=function(req){var deferred=this.$q.defer();return this.$log.info("get app details",req),this.$http.post(this.API_ROUTES.core_api.getDetailedApp,{appId:req}).then(function(response){deferred.resolve(response.data)})["catch"](function(e){console.error(e),deferred.reject(e)}),deferred.promise},WebstoreService.prototype.getNonPromotedSpaces=function(buildId){var deferred=this.$q.defer();return this.$log.info("get non promoted spaces"),this.$http.post(this.API_ROUTES.core_api.getNonPromotedSpaces,{buildId:buildId}).then(function(response){deferred.resolve(response.data)})["catch"](function(e){console.error(e),deferred.reject(e)}),deferred.promise},WebstoreService.prototype.getPromotedSpaces=function(buildId){var deferred=this.$q.defer();return this.$log.info("get promoted spaces"),this.$http.post(this.API_ROUTES.core_api.getPromotedSpaces,{buildId:buildId}).then(function(response){response.data?deferred.resolve(response.data.reverse()):deferred.resolve()})["catch"](function(e){console.error(e),deferred.reject(e)}),deferred.promise},WebstoreService.prototype.getBuildTimeline=function(buildId){var deferred=this.$q.defer();return this.$http.post(this.API_ROUTES.core_api.getBuildTimeline,{buildId:buildId}).then(function(response){deferred.resolve(response.data)})["catch"](function(e){console.error(e),deferred.reject(e)}),deferred.promise},WebstoreService.prototype.getAppTimeline=function(appId){var deferred=this.$q.defer();return this.$http.post(this.API_ROUTES.core_api.getAppTimeline,{appId:appId}).then(function(response){deferred.resolve(response.data)})["catch"](function(e){console.error(e),deferred.reject(e)}),deferred.promise},WebstoreService}();angular.module("casUiServiceApp").service("webstoreService",WebstoreService);var HttpLogger=function(){function HttpLogger($injector,$log,API_ROUTES){this.$injector=$injector,this.$log=$log,this.API_ROUTES=API_ROUTES}return HttpLogger.prototype.log=function(message,data,title){this.LogRemote("Log",message,data,title),this.$log.log("Log",message,data);
},HttpLogger.prototype.debug=function(message,data,title){this.LogRemote("Debug",message,data,title),this.$log.debug("Debug",message,data)},HttpLogger.prototype.error=function(message,data,title){this.LogRemote("Error",message,data,title),this.$log.error("Error",message,data)},HttpLogger.prototype.info=function(message,data,title){this.LogRemote("Info",message,data,title),this.$log.info("Info",message,data)},HttpLogger.prototype.success=function(message,data,title){this.LogRemote("Success",message,data,title),this.$log.info("Success",message,data)},HttpLogger.prototype.warning=function(message,data,title){this.LogRemote("Warning",message,data,title),this.$log.warn("Warning",message,data)},HttpLogger.prototype.warn=function(message,data,title){this.LogRemote("Warning",message,data,title),this.$log.warn("Warning",message,data)},HttpLogger.prototype.LogRemote=function(type,message,data,title){var $http=this.$injector.get("$http"),$q=this.$injector.get("$q"),deferred=$q.defer();return $http.post(this.API_ROUTES.core_api.log,{type:type,message:message,data:data}).then(function(response){deferred.resolve(response.data)},function(e){console.error(e),deferred.reject(e)}),deferred.promise},HttpLogger}(),ScheduleService=function(){function ScheduleService($http,$q,$log,API_ROUTES){this.$http=$http,this.$q=$q,this.$log=$log,this.API_ROUTES=API_ROUTES}return ScheduleService.$inject=["$http","$q","$log","API_ROUTES"],ScheduleService.prototype.addSchedule=function(schedule){var _this=this,deferred=this.$q.defer();return this.$log.info("ScheduleService > addSchedule: ",schedule),this.$http.post(this.API_ROUTES.schedule_api.newScheduleEvent,schedule).then(function(response){deferred.resolve(response.data)})["catch"](function(e){_this.$log.error(e.message,e.name),deferred.reject(e)}),deferred.promise},ScheduleService.prototype.updateSchedule=function(scheduleEvent){var _this=this,deferred=this.$q.defer();return this.$log.info("ScheduleService > updateScheduleEvent: ",scheduleEvent),this.$http.post(this.API_ROUTES.schedule_api.updateScheduleEvent,scheduleEvent).then(function(response){deferred.resolve(response.data)},function(e){_this.$log.error(e.message,e.name),deferred.reject(e)}),deferred.promise},ScheduleService.prototype.getSchedule=function(scheduleId){var _this=this,deferred=this.$q.defer();return this.$log.info("ScheduleService > getSchedule: ",scheduleId),this.$http.post(this.API_ROUTES.schedule_api.getSchedule,{scheduleId:scheduleId}).then(function(response){deferred.resolve(response.data)},function(e){_this.$log.error(e.message,e.name),deferred.reject(e)}),deferred.promise},ScheduleService.prototype.getScheduleEvents=function(buildId){var _this=this,deferred=this.$q.defer();return this.$log.info("ScheduleService > getBuildSchedules: ",buildId),this.$http.post(this.API_ROUTES.schedule_api.getBuildSchedules,{buildId:buildId}).then(function(response){deferred.resolve(response.data)},function(e){_this.$log.error(e.message,e.name),deferred.reject(e)}),deferred.promise},ScheduleService}();angular.module("casUiServiceApp").service("scheduleService",ScheduleService);var DirectoryService=function(){function DirectoryService($http,$q,$log,API_ROUTES){this.$http=$http,this.$q=$q,this.$log=$log,this.API_ROUTES=API_ROUTES}return DirectoryService.$inject=["$http","$q","$log","API_ROUTES"],DirectoryService.prototype.getOuTree=function(req){var _this=this,deferred=this.$q.defer();return this.$log.info("getting directory tree"),this.$http.post(this.API_ROUTES.google_api.getDirectoryTree,req).then(function(response){deferred.resolve(response.data)},function(e){_this.$log.error(e.message,e.name),deferred.reject(e)}),deferred.promise},DirectoryService}();angular.module("casUiServiceApp").service("directoryService",DirectoryService);var _this=this;angular.module("cas.auth").factory("Authentication",["$http","$q","API_ROUTES",function($http,$q,API_ROUTES){var service=_this;return service.authenticate=function(email,password){var defer=$q.defer();return email=email.toLowerCase(),$http.post(API_ROUTES.auth_api.authenticate,{username:email,password:password},{skipAuthorization:!0}).then(function(data){200!==data.status?defer.reject(data.data):defer.resolve(JSON.parse(data.headers().iw_app_user_data))},function(data){defer.reject(data.data)}),defer.promise},service}]),angular.module("cas.auth").service("UserService",["$rootScope","store","APP_EVENTS",function($rootScope,store,APP_EVENTS){var service=_this,currentUser=void 0;return service.setCurrentUser=function(newUser){return currentUser!==newUser&&(currentUser=newUser,void 0===currentUser||null===currentUser?store.remove("currentUser"):store.set("currentUser",currentUser),$rootScope.$emit(APP_EVENTS.auth_events.currentUserChanged)),currentUser},service.getCurrentUser=function(){return currentUser||(currentUser=store.get("currentUser")),currentUser},service.subscribe=function(scope,callback){var handler=$rootScope.$on(APP_EVENTS.auth_events.currentUserChanged,callback);scope.$on("$destroy",handler)},service}]);var roleTree={name:"admin"};angular.module("cas.auth").factory("Authorization",["UserService",function(UserService){var authorize=function(loginRequired,requiredPermissions,permissionCheckType,toParams){var result=0,user=UserService.getCurrentUser(),hasPermission=!1;return permissionCheckType=permissionCheckType||0,loginRequired!==!0||void 0!==user&&null!==user?loginRequired!==!0||void 0===user||void 0!==requiredPermissions&&0!==requiredPermissions.length?requiredPermissions&&(_.each(requiredPermissions,function(reqPerm){if(!hasPermission){var isAdminRole=_.find(user.authorization.user.roles,function(checkAdminRole){return checkAdminRole.name===roleTree.name});if(isAdminRole)hasPermission=!0;else{var role=_.find(user.authorization.user.roles,function(checkUserRole){return checkUserRole.name===reqPerm.toLowerCase()});_.isUndefined(role)?hasPermission=!1:_.isUndefined(role.emittedObject)||_.isUndefined(role.emittedObject.required)||3!=permissionCheckType?hasPermission=!0:_.isArray(role.emittedObject.required.properties)&&(hasPermission=_.every(role.emittedObject.required.properties,function(prop){return toParams[prop.name]===prop.value}))}}}),result=hasPermission?0:2):result=0:result=1,result};return{authorize:authorize}}]),angular.module("cas.auth").directive("access",["Authorization",function(Authorization){return{restrict:"A",link:function(scope,element,attrs){var makeVisible=function(){element.removeClass("hidden"),element.removeAttr("hidden"),element.removeClass("disabled"),element.removeAttr("disabled")},makeDisabled=function(){element.addClass("disabled"),element.attr("disabled","disabled")},makeHidden=function(){element.addClass("hidden"),element.attr("hidden","")},determineVisibility=function(resetFirst){var result;resetFirst&&makeVisible(),console.log(attrs.permission),result=Authorization.authorize(!0,roles,attrs.accessPermissionType,attrs.permission?JSON.parse(attrs.permission):{}),0===result?makeVisible():"button"==element[0].localName?makeDisabled():makeHidden()},roles=attrs.access.replace(" ","").split(",");roles.length>0&&determineVisibility(!0)}}}]),angular.module("cas.auth").directive("user",["UserService",function(UserService){return{restrict:"EA",scope:{greetings:"@"},link:function(scope,element){var user=UserService.getCurrentUser();void 0!==user&&null!==user&&element.html(scope.greetings+" "+(void 0!=user.fullname?user.fullname:user.username))}}}]);var mod=angular.module("cas.file",[]);mod.directive("onReadFile",["$parse",function($parse){return{restrict:"A",link:function(scope,element,attrs){var fn=$parse(attrs.onReadFile);element.on("change",function(onChangeEvent){var reader=new FileReader;reader.onload=function(onLoadEvent){scope.$apply(function(){fn(scope,{$fileContent:onLoadEvent.target.result})})};var file=(onChangeEvent.srcElement||onChangeEvent.target).files[0];-1!==file.type.indexOf("json")?reader.readAsText(file):reader.readAsArrayBuffer(file)})}}}]),mod.controller("credEditorCtrl",["$scope","googleAuthService","$mdToast","$document",function($scope,googleAuthService,$mdToast,$document){function sanitizePosition(){var current=$scope.toastPosition;current.bottom&&last.top&&(current.top=!1),current.top&&last.bottom&&(current.bottom=!1),current.right&&last.left&&(current.left=!1),current.left&&last.right&&(current.right=!1),last=angular.extend({},current)}$scope.showContent=function($fileContent){$scope.content=JSON.parse($fileContent)};var last={bottom:!1,top:"78px",left:!1,right:!0};$scope.toastPosition=angular.extend({},last),$scope.getToastPosition=function(){return sanitizePosition(),Object.keys($scope.toastPosition).filter(function(pos){return $scope.toastPosition[pos]}).join(" ")},$scope.showCustomToast=function(){$mdToast.show({controller:"ToastCtrl",templateUrl:"../../views/toast.html",parent:$document[0].querySelector("#toastBounds"),position:$scope.getToastPosition()})},$scope.uploadFile=function(){googleAuthService.setAuthKey($scope.content,$scope.domain).then(function(res){$mdToast.show({templateUrl:"../../views/toast.html",controllerAs:"vm",controller:["locals",function(locals){this.message="The selected key has been established for the domain: "+locals.domain}],locals:{domain:$scope.domain},position:$scope.getToastPosition(),hideDelay:1e4}),$scope.content=null})["catch"](function(e){$scope.error="<md-toolbar>ERROR! There seems to be a problem with your file upload. Please try again. "+e.message+"</md-toolbar>"})},$scope.closeError=function(){$scope.msg=null},$scope.cancelUpload=function(){$scope.content=null}}]);var GoogleAuthService=function(){function GoogleAuthService($http,$q,$log,API_ROUTES){this.$http=$http,this.$q=$q,this.$log=$log,this.API_ROUTES=API_ROUTES}return GoogleAuthService.$inject=["$http","$q","$log","API_ROUTES"],GoogleAuthService.prototype.getAuthKey=function(){var deferred=this.$q.defer();return this.$http.get(this.API_ROUTES.google_api.getGoogleAuthKey).then(function(response){deferred.resolve(response.data)})["catch"](function(e){console.error(e),deferred.reject(e)}),deferred.promise},GoogleAuthService.prototype.setAuthKey=function(key,domain){var deferred=this.$q.defer();return this.$http.post(this.API_ROUTES.google_api.setGoogleAuthKey,{key:key,domain:domain}).then(function(response){deferred.resolve(response.data)})["catch"](function(e){console.error(e),deferred.reject(e)}),deferred.promise},GoogleAuthService}();angular.module("casUiServiceApp").service("googleAuthService",GoogleAuthService);var PromotionService=function(){function PromotionService($http,$q,$log,API_ROUTES){this.$http=$http,this.$q=$q,this.$log=$log,this.API_ROUTES=API_ROUTES}return PromotionService.$inject=["$http","$q","$log","API_ROUTES"],PromotionService.prototype.promoteBuild=function(req){var _this=this,deferred=this.$q.defer();return this.$http.post(this.API_ROUTES.promotion_api.promoteBuild,req).then(function(response){deferred.resolve(response.data)},function(e){_this.$log.error(e.message,e.name),deferred.reject(e)}),deferred.promise},PromotionService}();angular.module("casUiServiceApp").service("promotionService",PromotionService);var ZipService=function(){function ZipService($q,$log,JSZip){this.$q=$q,this.$log=$log,this.JSZip=JSZip}return ZipService.$inject=["$q","$log","JSZip"],ZipService.prototype.extractAndParseZip=function(zipfile,fileName){var zip=(this.$q.defer(),(new this.JSZip).load(zipfile)),file=zip.files[fileName];return void 0==file?null:-1!==fileName.indexOf("json")?JSON.parse(file.asText()):-1!==fileName.indexOf("png")||-1!==fileName.indexOf("jpg")||-1!==fileName.indexOf("jpeg")?file.asArrayBuffer():void 0},ZipService}();angular.module("casUiServiceApp").service("JSZipUtil",ZipService);var UserRolesService=function(){function UserRolesService($http,$q,$log,API_ROUTES){this.$http=$http,this.$q=$q,this.$log=$log,this.API_ROUTES=API_ROUTES}return UserRolesService.$inject=["$http","$q","$log","API_ROUTES"],UserRolesService.prototype.getUserRoles=function(username){var _this=this,deferred=this.$q.defer();return this.$http.post(this.API_ROUTES.users_api.getUserRoles,{username:username}).then(function(response){deferred.resolve(_this.ConvertUserRoles(response.data))})["catch"](function(e){_this.$log.error(e.message,e.name),deferred.reject(e)}),deferred.promise},UserRolesService.prototype.ConvertUserRoles=function(userRoles){var result=_.map(userRoles,function(role){var appId=void 0,spaceId=void 0;role.emittedObject&&(appId=_.find(role.emittedObject.required.properties,function(prop){return"appId"===prop.name}),spaceId=_.find(role.emittedObject.required.properties,function(prop){return"spaceId"===prop.name}));var temp={userRoleId:role.userRoleId,name:role.name,appId:appId?appId.value:void 0,spaceId:spaceId?spaceId.value:void 0};return temp});return result},UserRolesService.prototype.getUsers=function(username){var _this=this,deferred=this.$q.defer();return this.$http.post(this.API_ROUTES.users_api.findUsers,{username:username}).then(function(response){deferred.resolve(response.data)})["catch"](function(e){_this.$log.error(e.message,e.name),deferred.reject(e)}),deferred.promise},UserRolesService.prototype.saveUserRole=function(newUserRole){var _this=this,deferred=this.$q.defer();return this.$http.post(this.API_ROUTES.users_api.saveUserRole,newUserRole).then(function(response){deferred.resolve(response.data)})["catch"](function(e){_this.$log.error(e.message,e.name),deferred.reject(e)}),deferred.promise},UserRolesService.prototype.deleteUserRole=function(userRoleId){var _this=this,deferred=this.$q.defer();return this.$http.post(this.API_ROUTES.users_api.deleteUserRole,{userRoleId:userRoleId}).then(function(response){deferred.resolve(response.data)})["catch"](function(e){_this.$log.error(e.message,e.name),deferred.reject(e)}),deferred.promise},UserRolesService}();angular.module("casUiServiceApp").service("userRolesService",UserRolesService),angular.module("casUiServiceApp").run(["$templateCache",function($templateCache){$templateCache.put("views/_common.html",'<div layout="column" flex> <md-toolbar class="md-whiteframe-z2 main-header"> <div class="md-toolbar-tools"> <img class="thdLogo" src="../images/HomeDepotLogo.672facf4.png" alt="Home Depot logo"> <md-button ng-click="onClickMenu()" class="md-icon-button md-mini" hide-gt-md aria-label="Menu" style="background: transparent; box-shadow: none"> <i class="fa fa-bars"></i> </md-button> <span flex></span> <div class="cas-search" flex> <button class="searchBtn">Search</button> <input type="text" class="cas-search" ng-model="search"> </div> </div> </md-toolbar> <div layout="row" flex> <md-sidenav class="md-sidenav-left md-whiteframe-z2 md-closed ng-isolate-scope md-locked-open" md-component-id="left" md-is-locked-open="$mdMedia(\'gt-md\')" tabindex="-1"> <md-toolbar class="md-hue-3 sideNavHeader" layout-align="center center"> <div layout="column" class="md-toolbar-tools-bottom inset" layout-align="start center"> <user greetings="" style="margin-top: 10px" class="user-name"></user> <div class="md-caption">Marietta, GA</div> </div> </md-toolbar> <div layout="column" layout-align="center center" layout-margin> <span class="rolesTitle">Roles</span> <span class="roles" ng-repeat="role in userRoles">{{role}}</span> </div> <md-content flex role="navigation" ss-style-color="{\'background-color\': \'primary.default\'}"> <ss-sidenav flex menu="menu"></ss-sidenav> </md-content> </md-sidenav> <md-content flex> <div layout="column" layout-fill class="main-ui-view"> <div layout="row" layout-align="start" flex=""> <h1 class="page-title">{{menu.currentPage.name}}</h1> </div> <ui-view layout="column" flex="noshrink"> </ui-view> </div> </md-content> </div> </div>'),$templateCache.put("views/app-creation/new-app.html",'<md-content layout-padding layout="row"> <form name="appForm"> <md-input-container class="md-block"> <p>Do you have your application zip File?</p> <md-radio-group ng-model="vm.ownFile" layout="row" ng-change="vm.ResetForm()"> <md-radio-button value="yes">Yes</md-radio-button> <md-radio-button value="no"> No </md-radio-button> </md-radio-group> </md-input-container> <div ng-if="vm.ownFile == \'no\' || vm.fileLoaded"> <div layout-gt-xs="row"> <md-input-container class="md-block" flex-gt-xs> <label>Application Name</label> <input ng-disabled="vm.ownFile == \'yes\'" ng-model="vm.app.appName"> </md-input-container> </div> <md-input-container class="md-block"> <label>Description</label> <textarea ng-model="vm.app.description" md-maxlength="150" rows="5" md-select-on-focus></textarea> </md-input-container> <md-input-container class="md-block"> <label>App Image</label> <img ng-if="vm.app.image" ng-src="{{vm.app.image}}" style="max-width:120px"> <div ng-if="!vm.fileLoaded"> <md-button class="md-raised" ng-hide="content" ng-click="vm.ClickElement(\'appImage1\')"> <i class="fa fa-upload"></i>Upload Image </md-button> <input id="appImage1" type="file" accept="image/*" on-read-file="vm.LoadImg($fileContent)" onclick="this.value = null" style="visibility: hidden"> </div> </md-input-container> </div> <md-input-container class="md-block" ng-if="vm.ownFile == \'yes\' && !vm.fileLoaded"> <span>Please upload your chrome app in a zip file</span> <md-button class="md-raised" ng-hide="content" ng-click="vm.ClickElement(\'file-input\')"> <i class="fa fa-upload"></i>Upload zip </md-button> <input id="file-input" type="file" accept="application/zip" on-read-file="vm.ShowContent($fileContent)" onclick="this.value = null" style="visibility: hidden"> <span ng-if="vm.error">{{vm.error}}</span> </md-input-container> <div layout-gt-sm="row" ng-if="vm.ownFile"> <md-input-container class="md-block" flex-gt-sm> <label>Select Default Space</label> <md-select ng-model="vm.app.defaultSpaceId"> <md-option ng-repeat="space in vm.spaces" value="{{space.spaceId}}"> {{space.name}} </md-option> </md-select> </md-input-container> </div> <md-button ng-disabled="!appForm.$error" ng-click="vm.NewChromeApp()" class="md-primary">Create</md-button> </form> </md-content>'),$templateCache.put("views/appschedule.html",'<calendar-md flex layout layout-fill calendar-direction="vertical" on-prev-month="prevMonth" on-next-month="nextMonth" on-day-click="dayClick" title-format="\'MMMM y\'" ng-model="selectedDate" week-starts-on="firstDayOfWeek" day-content="vm.SetDayContent"> </calendar-md>'),$templateCache.put("views/build-view.html",'<div class="builds-windows"> <md-card class="md-whiteframe-z1 buildsView"> <div style="padding:25px"> <div class="summaryHeading">Chrome App ID: <span style="max-width:200px; color:#555">{{vm.appDetails.chromeAppId}}</span></div> <div layout="row" layout-fill> <div style="max-width:200px; margin: 23px 20px 0 0"> <img src="{{vm.img}}" alt="app image"> </div> <div layout-fill> <md-table-container ng-if="vm.appDetails.scheduledBuilds" layout="column" layout-fill> <table md-table> <thead md-head md-order="vm.adQuery.order" md-on-reorder="vm.OnReorder(vm.adQuery)"> <tr md-row> <th md-column>Spaces</th> <th md-column>Scheduled</th> <th md-column>Deployed</th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="sb in vm.appDetails.scheduledBuilds | filter: search | orderBy: vm.adQuery.order | limitTo: vm.adQuery.limit : (vm.adQuery.page -1) * vm.adQuery.limit"> <td md-cell>{{sb.space}}</td> <td md-cell>{{sb.scheduledDate | date: \'MM/dd/yyyy @ h:mma\'}} | v{{sb.version}}</td> <td md-cell><div ng-if="vm.IsPast(sb.scheduledDate)">{{sb.scheduledDate | date: \'MM/dd/yyyy @ h:mma\'}} | v{{sb.version}}</div></td> </tr> </tbody> </table> <md-table-pagination md-limit="vm.adQuery.limit" md-page="vm.adQuery.page" md-total="{{vm.appDetails.scheduledBuilds.length}}" md-on-paginate="vm.OnPaginate(vm.adQuery)" md-page-select></md-table-pagination> </md-table-container> <div ng-if="!vm.appDetails.scheduledBuilds">Nothing has been <scheduled class=""></scheduled></div> </div> </div> </div> </md-card> <md-card class="md-whiteframe-z1 buildsView"> <md-table-container layout="column" layout-fill> <table md-table> <thead md-head md-order="vm.query.order" md-on-reorder="vm.OnReorder(vm.query)"> <tr md-row> <th md-column>Status</th> <th md-column md-numeric md-order-by="version">Version</th> <th md-column md-order-by="commitId">Commit</th> <th md-column md-order-by="committerId">Committer</th> <th md-column md-numeric md-order-by="buildTs">Build Date</th> <!--<th md-column md-numeric md-order-by="buildDuration">Duration</th>--> <th md-column>XML</th> <th md-column>Schedule</th> <th md-column>Promote</th> <th md-column>Timeline</th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="b in vm.buildsList | filter: search | orderBy: vm.query.order | limitTo: vm.query.limit : (vm.query.page -1) * vm.query.limit"> <td md-cell> <!--<i class="fa fa-thumbs-o-up">--> <!--<md-tooltip>{{b.appId === \'cfflgggnefmchloliajppkfnmnagehlc\' ? "Failed" : "Good"}}</md-tooltip>--> <!--</i>--> Good </td> <td md-cell>v{{b.version}}</td> <td md-cell><a ng-href="http://{{b.commitUrl}}" target="_blank">{{b.commitId}}</a></td> <td md-cell>{{b.committerId}}</td> <td md-cell style="padding-right:22px">{{b.buildTs | date: \'MM/dd/yyyy @ h:mma\'}}</td> <!--<td md-cell>{{b.buildDuration}}</td>--> <td md-cell> <md-button class="md-icon-button md-mini" ng-href="{{b.updateUrl}}" target="_blank"> <md-tooltip>Open Omaha XML</md-tooltip> <i class="fa fa-code"></i> </md-button> </td> <td md-cell> <md-button access="admin, scheduler" permission="{&quot;appId&quot;: &quot;{{b.appId}}&quot;}" access-permission-type="3" class="md-icon-button md-mini" ng-click="vm.ShowScheduleDialog($event, b)" aria-label="Favorite"> <md-tooltip>Schedule</md-tooltip> <i class="fa fa-calendar"></i> </md-button> </td> <td md-cell> <md-button access="admin, promoter" permission="{&quot;appId&quot;: &quot;{{b.appId}}&quot;}" access-permission-type="3" class="md-icon-button md-accent md-mini" ng-click="vm.ShowPromotionDialog($event, b)" aria-label="Favorite"> <md-tooltip>Promote</md-tooltip> <i class="fa fa-cloud-upload"></i> </md-button> </td> <td md-cell> <md-button access="admin, scheduler" permission="{&quot;appId&quot;: &quot;{{b.appId}}&quot;}" access-permission-type="3" class="md-icon-button md-accent md-mini" ng-click="vm.ShowTimeline(b)" aria-label="Favorite"> <md-tooltip>Show Timeline</md-tooltip> <i class="fa fa-history"></i> </md-button> </td> </tr> </tbody> </table> </md-table-container> <md-table-pagination md-limit="vm.query.limit" md-page="vm.query.page" md-total="{{vm.buildsList.length}}" md-on-paginate="vm.OnPaginate(vm.query)" md-page-select></md-table-pagination> </md-card> <h1 class="pageBtn" ui-sref="common.webstore.apps"> <md-button aria-label="Back to Apps"><i class="fa fa-chevron-left"></i> Back to Apps Page</md-button> <md-tooltip>Create a new chrome application</md-tooltip> </h1> </div>'),$templateCache.put("views/googlecreds.html",'<div layout="row" layout-align="start" class="dialogCard" id="credEditor"> <md-card layout="column" layout-align="start center" flex="50"> <md-toolbar class="md-padding uploadError" layout="row" layout-align="center start" ng-if="error"> <i class="fa fa-exclamation-circle"></i> <div>{{error}}</div> <i class="fa fa-times" ng-click="closeError()"></i> </md-toolbar> <form name="jwtForm" layout-align="center" layout-fill="" class="md-padding"> {{msg}} <div layout="column" flex="" layout-align="start"> <div class="keyHelp"> <!--This is the section where some documentation should be written about how to get this key. Explain thoroughly.--> <a href="https://developers.google.com/admin-sdk/directory/v1/guides/delegation#create_the_service_account_and_its_credentials" target="_blank"> Need help? </a> </div> <md-input-container class="md-block md-text-field" layout-fill=""> <input type="text" required name="domain" pattern="\\b[\\w-]+(?:\\.[\\w-]+){1,10}\\b" ng-model="domain"> <label>Enter Domain (example.com)</label> <div ng-messages="jwtForm.domain.$error" class="msgs"> <div ng-message="required">Required</div> <div ng-message="pattern">Enter a valid domain.</div> </div> </md-input-container> <div layout="row"> <md-button class="md-raised md-accent" ng-hide="content"> <label for="file-input" style="display:block; cursor: pointer !important"><i class="fa fa-download"></i> Choose key file</label> </md-button> <md-button ng-click="cancel()" class="cancel" ng-if="!content"> Cancel </md-button> </div> <input id="file-input" type="file" accept="application/json" on-read-file="showContent($fileContent)" onclick="this.value = null" style="visibility: hidden"> </div> <div ng-if="content"> <label>Key Preview</label> <div> <pre class="keyContent">{{content | json}}</pre> </div> </div> <md-input-container layout="row" ng-show="content"> <md-button class="md-raised md-accent" ng-click="uploadFile()"> Upload Key </md-button> <md-button class="cancel" ng-click="cancelUpload()"> Cancel </md-button> </md-input-container> </form> </md-card> </div>'),$templateCache.put("views/login.html",'<div layout="column" flex> <md-toolbar class="md-whiteframe-z2 main-header"> <div class="md-toolbar-tools"> <a ui-sref="common.webstore"> <div layout="row" layout-align="start center"> <img src="../images/HomeDepotLogo.672facf4.png" class="thdLogo" alt="Home Depot logo" style="width: 50px"> <div layout-padding="">Chrome Application Server</div> </div> </a> </div> </md-toolbar> <md-content md-scroll-y="" layout="column" class="layout-content"> <h1 class="page-title" style="padding-left: 20px">{{menu.currentPage.name}}</h1> <div layout-padding="" flex="noshrink" layout="row" layout-align="center center" flex style="padding-top: 48px"> <md-card id="login_card"> <md-toolbar> <div layout="row" layout-align="start center" layout-margin> <i class="fa fa-sign-out"></i> <span>CAS - Sign In</span> <div class="login_heading" style="text-align: center; margin-bottom: 32px"> </div> </div> </md-toolbar> <form name="loginForm" id="loginForm" ng-submit="vm.login()" style="padding: 24px 35px"> <div class="has-error" role="alert" ng-show="vm.invalidLogin">Oh snap! Email and password combination not recognised</div> <md-input-container class="md-text-field md-block"> <input type="text" name="email" ng-model="vm.email" required> <label>User ID</label> <ng-messages for="loginForm.email.$error" multiple> <ng-message when="required">Username field is required</ng-message> </ng-messages> </md-input-container> <md-input-container class="md-text-field md-inline-block"> <input name="password" type="password" ng-model="vm.password" required> <label>Password</label> <ng-messages for="loginForm.password.$error" multiple> <ng-message when="required">Password field is required</ng-message> </ng-messages> </md-input-container> <md-input-container> <md-button class="md-accent md-raised" type="submit" id="signIn">Sign In</md-button> </md-input-container> </form> <md-input-container layout="row" layout-align="center center" layout-margin class="signInFooter"> <md-checkbox style="margin: 0px" class="md-accent md-hue-1">Stay signed in</md-checkbox> <span flex></span> <a href="/help"><i class="fa fa-question-circle"></i></a> </md-input-container> </md-card> </div> </md-content> </div>'),$templateCache.put("views/members.html",'<div> <md-autocomplete md-selected-item="vm.user" md-search-text="vm.searchText" md-items="user in vm.findUsers(vm.searchText)" md-selected-item-change="vm.getUserRoles(user.username)" md-item-text="user.username" md-min-length="1" placeholder="Lookup a user different than you..."> <md-item-template> <span md-highlight-text="vm.searchText" md-highlight-flags="^i">{{user.username}}</span> </md-item-template> <md-not-found> No states matching "{{vm.searchText}}" were found. <!--<a ng-click="vm.newState(vm.searchText)">Create a new one!</a>--> </md-not-found> </md-autocomplete> <md-list ng-cloak ng-if="vm.user"> <md-list-item ng-repeat="role in vm.userRoles"> <span><b style="text-transform: capitalize">{{role.name}} </b></span> <!--<md-checkbox ng-repeat="element in role.elements" ng-if="element.appId || element.spaceId">\n                {{vm.getAppName(element.appId)}} / {{vm.getSpaceName(element.spaceId)}}\n            </md-checkbox>--> <md-chips class="custom-chips" ng-model="role.elements" readonly> <md-chip-template> <span> <strong>{{vm.getAppName($chip.appId)}} / {{vm.getSpaceName($chip.spaceId)}}</strong> </span> </md-chip-template> <button ng-click="vm.removeUserRole($chip.userRoleId)" md-chip-remove class="md-primary chip"> <md-icon md-svg-icon="md-close"></md-icon> </button> </md-chips> </md-list-item> </md-list> <div layout="row" ng-if="vm.user" layout-margin layout-align="start start"> <div> <md-subheader class="md-no-sticky">Roles</md-subheader> <md-radio-group ng-model="vm.newUserRole.role"> <md-radio-button ng-repeat="role in vm.roles" ng-value="role" aria-label="{{role}}"> {{role}} </md-radio-button> </md-radio-group> </div> <div> <md-subheader class="md-no-sticky">Apps</md-subheader> <md-radio-group ng-disabled="!vm.newUserRole.role" ng-model="vm.newUserRole.appId"> <md-radio-button ng-disabled="!vm.newUserRole.role" ng-repeat="app in vm.apps" ng-value="app.appId" aria-label="{{app.appName}}"> {{app.appName}} </md-radio-button> </md-radio-group> </div> <div> <md-subheader class="md-no-sticky">Spaces</md-subheader> <md-radio-group ng-disabled="!vm.newUserRole.role" ng-model="vm.newUserRole.spaceId"> <md-radio-button ng-disabled="!vm.newUserRole.role" ng-repeat="space in vm.spaces" ng-value="space.spaceId" aria-label="{{space.name}}"> {{space.name}} </md-radio-button> </md-radio-group> </div> </div> <md-button ng-disabled="!vm.user || !vm.newUserRole" class="md-raised" ng-click="vm.saveUserRole()">Add New</md-button> </div>'),$templateCache.put("views/promotion-modal.html",'<md-dialog ng-cloak class="promotion md-margin" layout="column"> <!--PROMOTION VIEW--> <md-dialog-content> <div class="md-dialog-content"> <div layout="row"> <h2>Promotion</h2> <span flex></span> <i class="fa fa-times" ng-click="vm.Cancel()"></i> </div> <p>Promotion History</p> <span ng-repeat="space in vm.promotedSpaces"> <span>{{space.name}}</span> <span ng-if="!$last">></span> </span> <p>Select target space</p> <form> <md-dialog-content> <md-radio-group ng-model="vm.selectedSpaceId" layout="row" layout-align="center start"> <md-radio-button ng-repeat="space in vm.spaces" ng-value="space.spaceId" class="md-primary">{{space.name}} </md-radio-button> </md-radio-group> </md-dialog-content> <md-dialog-actions flex layout="row" layout-align="space-between"> <md-button ng-click="vm.Promote()" md-autofocus class="promotion-save md-raised"> Save </md-button> <md-button ng-click="vm.Cancel()" class="cancel"> Cancel </md-button> </md-dialog-actions> </form> </div> </md-dialog-content> </md-dialog>'),$templateCache.put("views/scheduler-modal.html",'<md-dialog ng-cloak class="scheduler-modal" ng-show="vm.schedulerModal" layout="column"> <!--SCHEDULE VIEW--> <md-toolbar> <div layout="row" class="md-margin md-padding" style="padding-bottom: 0"> <div class="schedTitle">Schedule a Deploy<br><span class="schedSubTitle">{{vm.locals.appName}} v{{vm.locals.buildVersion}}</span> </div> <span flex></span> <i class="fa fa-times" ng-click="vm.Close()"></i> </div> </md-toolbar> <md-steppers md-dynamic-height md-selected="vm.selectedStep"> <md-step label="Choose Space" md-complete="vm.stepData[0].data.completed" ng-disabled="vm.stepProgress < 1"> <md-content> <form name="scheduleForm" novalidate> <md-radio-group name="space" required ng-model="vm.formData.selectedSpaceId" style="display: inline-block"> <md-radio-button ng-click="vm.submitCurrentStep(vm.stepData[0])" ng-repeat="space in vm.locals.spaces" ng-value="space.spaceId"> {{space.name}} </md-radio-button> </md-radio-group> <div ng-messages="scheduleForm.space.$error" ng-if="scheduleForm.$dirty"> <div ng-message="required">This is required.</div> </div> </form> <div layout="row" layout-align="end center" class="md-margin md-padding"> <md-button class="md-button tertiary" ng-click="vm.Close()">Cancel</md-button> </div> </md-content> </md-step> <md-step label="Choose Deployment Target" md-complete="vm.stepData[1].data.completed" ng-disabled="vm.stepProgress < 2"> <md-content> <div> <md-virtual-repeat-container data-collapsed="isCollapsed" data-angular-treeview="true" data-tree-id="tv1" data-tree-model="vm.locals.directoryTree" data-node-id="orgUnitId" data-node-label="name" data-node-children="children" layout-padding layout="column" layout-align="center center" class="treeview-container"> </md-virtual-repeat-container> <div layout="row" layout-align="end center" class="md-margin md-padding"> <md-button class="md-button tertiary" ng-click="vm.Close()">Cancel</md-button> <md-button class="md-button" ng-click="vm.moveToPreviousStep()">Back</md-button> <md-button value="Next" class="md-button primary" ng-click="vm.submitCurrentStep(vm.stepData[1])">Next Step </md-button> </div> </div> </md-content> </md-step> <md-step label="Date and Time" md-complete="vm.stepData[2].data.completed" ng-disabled="vm.stepProgress < 3"> <md-content> <form name="dateForm" ng-submit="vm.Schedule()"> <md-radio-group required ng-model="vm.formData.scheduleType"> <md-radio-button value="now" class="md-primary">Right Now</md-radio-button> <md-radio-button value="schedule" class="md-primary">Future</md-radio-button> </md-radio-group> <div ng-if="vm.formData.scheduleType !== \'now\'"> <div ng-messages="dateForm.myDate.$error" ng-if="dateForm.$dirty" class="md-margin"> <div ng-message="required">Select a valid date and time.</div> </div> <div layout="row" layout-align="start end" class="md-margin"> <div layout="column" layout-align="start" class="date-container"> <label class="datepickerLabel">Date</label> <md-datepicker name="myDate" ng-model="vm.formData.scheduleEventDate" md-placeholder="mm/dd/yyyy" md-min-date="vm.minDate" md-max-date="vm.maxDate" ng-required="true"> </md-datepicker> </div> <md-input-container ng-focus="vm.focusedTime" class="timePicker" ng-class="{timePickerInvalid: !myForm.$pristine && myForm.$invalid}"> <label>Time</label> <input ng-keydown="vm.SetFormDirty(myForm)" class="timePickerInput" type="time" name="myTime" ng-model="vm.formData.scheduleEventDate" required> </md-input-container> </div> </div> <div layout="row" layout-align="end center" class="md-margin md-padding finalStepBtns"> <md-button class="md-button tertiary" ng-click="vm.Close()">Cancel</md-button> <md-button class="md-button" ng-click="vm.moveToPreviousStep()">Back</md-button> <md-button type="submit" class="md-raised md-accent" ng-disabled="dateForm.$invalid" style="margin-right:0">Finish</md-button> </div> <div ng-if="vm.errorMsg" class="errorMessage"> <p>{{vm.locals.appName}} v{{vm.locals.buildVersion}} was unable to be scheduled.</p> <p>{{vm.errorMsg}}</p> </div> </form> </md-content> </md-step> </md-steppers> <!--<md-dialog-content ng-show="vm.schedulerModal">--> <!--<div class="md-dialog-content">--> <!--<div layout="row">--> <!--<h2>Scheduling Deploy: {{vm.locals.appName}} v{{vm.locals.buildVersion}}</h2>--> <!--<span flex></span>--> <!--<i class="fa fa-times" ng-click="vm.Close()"></i>--> <!--</div>--> <!--<wizard on-finish="vm.Schedule()" style="display: none;">--> <!--<wz-step title="Starting">--> <!--<form name="scheduleForm" novalidate>--> <!--<p>Select space</p>--> <!--<md-select placeholder="click to make selection" name="space" required ng-model="vm.formData.selectedSpaceId">--> <!--<md-option ng-click="vm.NextStep()" ng-repeat="space in vm.locals.spaces" ng-value="space.spaceId"--> <!--class="md-primary">--> <!--{{space.name}}--> <!--</md-option>--> <!--</md-select>--> <!--<div ng-messages="scheduleForm.space.$error" ng-if="scheduleForm.$dirty">--> <!--<div ng-message="required">This is required.</div>--> <!--</div>--> <!--</form>--> <!--</wz-step>--> <!--<wz-step title="Continuing">--> <!--<p>Select deployment target</p>--> <!--<md-virtual-repeat-container data-collapsed="isCollapsed"--> <!--data-angular-treeview="true"--> <!--data-tree-id="tv1"--> <!--data-tree-model="vm.locals.directoryTree"--> <!--data-node-id="orgUnitId"--> <!--data-node-label="name"--> <!--data-node-children="children" layout-padding layout="column"--> <!--layout-align="center center" class="treeview-container">--> <!--</md-virtual-repeat-container>--> <!--<md-button wz-next="vm.NextStep()" value="Next" class="md-accent md-raised">Next</md-button>--> <!--</wz-step>--> <!--<wz-step title="Select datetime">--> <!--<form name="dateForm">--> <!--<p>Choose Date and Time</p>--> <!--<div layout="row" layout-align="start end" class="md-margin">--> <!--<div layout="column" layout-align="start" class="date-container">--> <!--<label class="datepickerLabel">Date</label>--> <!--<md-datepicker name="myDate" ng-model="vm.formData.scheduleEventDate" md-placeholder="mm/dd/yyyy"--> <!--md-min-date="vm.minDate" md-max-date="vm.maxDate" ng-required="true">--> <!--</md-datepicker>--> <!--</div>--> <!--<md-input-container ng-focus="vm.focusedTime" class="timePicker"--> <!--ng-class="{timePickerInvalid: !myForm.$pristine && myForm.$invalid}">--> <!--<label>Time</label>--> <!--<input ng-keydown="vm.SetFormDirty(myForm)" class="timePickerInput" type="time" name="myTime"--> <!--ng-model="vm.formData.scheduleEventDate" required>--> <!--<md-icon class="fa fa-clock-o" ng-click="timeFocused()"></md-icon>--> <!--</md-input-container>--> <!--<div class="timeZone">UTC</div>--> <!--</div>--> <!--<div ng-messages="dateForm.myDate.$error" ng-if="dateForm.$dirty">--> <!--<div ng-message="required">Select a valid date and time.</div>--> <!--</div>--> <!--<md-button class="md-raised md-accent" ng-disabled="dateForm.$invalid" wz-finish>Schedule</md-button>--> <!--</form>--> <!--</wz-step>--> <!--</wizard>--> <!--</div>--> <!--</md-dialog-content>--> <!--&lt;!&ndash;SCHEDULING PROCESS&ndash;&gt;--> <!--<div class="scheduler-progress" ng-show="vm.displayProgress">--> <!--<div class="progress-header" layout="row" layout-padding layout-align="center center">--> <!--<i class="fa fa-check-circle"></i>--> <!--<p>Your Request Is In Progress</p>--> <!--<span flex></span>--> <!--</div>--> <!--<div class="progress-content">--> <!--<md-progress-linear md-mode="indeterminate"></md-progress-linear>--> <!--</div>--> <!--</div>--> <!--&lt;!&ndash;SUCCESS MESSAGE&ndash;&gt;--> <!--<div class="scheduler-success" ng-show="vm.successMessage">--> <!--<div class="popupHeader success" layout="row" layout-padding layout-align="center center">--> <!--<i class="fa fa-check-circle"></i>--> <!--<p>Successful</p>--> <!--<span flex></span>--> <!--<i class="fa fa-times" ng-click="vm.Close()"></i>--> <!--</div>--> <!--<div class="popupContent">--> <!--<p>{{vm.locals.appName}} v{{vm.locals.buildVersion}} is scheduled to deploy to OrgUnit:--> <!--{{vm.formData.targetOrgUnit}} on</p>--> <!--<p><strong>{{vm.formData.scheduleEventDate | date:"MM/dd/yyyy \'at\' h:mma"}} </strong>local time.</p>--> <!--<md-button class="button btn-success" ng-click="vm.Close()">--> <!--View Scheduled Builds--> <!--</md-button>--> <!--</div>--> <!--</div>--> <!--&lt;!&ndash;FAIL MESSAGE&ndash;&gt;--> <!--<div class="scheduler-fail" ng-show="failMessage">--> <!--<div class="popupHeader error" layout="row" layout-padding layout-align="center center">--> <!--<i class="fa fa-times-circle"></i>--> <!--<p>Failed!</p>--> <!--<span flex></span>--> <!--<i class="fa fa-times" ng-click="vm.Close()"></i>--> <!--</div>--> <!--<div class="popupContent">--> <!--<p>{{vm.locals.appName}} v{{vm.locals.buildVersion}} was unable to be scheduled.</p>--> <!--<p>{{vm.errorMsg}}</p>--> <!--<md-button class="button btn-error" ng-click="vm.Close()">--> <!--Back to Builds--> <!--</md-button>--> <!--</div>--> <!--</div>--> </md-dialog>'),
$templateCache.put("views/timeline-modal.html",'<md-dialog ng-cloak class="promotion md-margin" layout="column"> <md-dialog-content> <div class="md-dialog-content"> <div layout="row"> <h2>Build Timeline</h2> <span flex></span> <i class="fa fa-times" ng-click="vm.Cancel()"></i> </div> <timeline> <timeline-event ng-repeat="event in vm.timeline" side="{{$even?\'right\':\'left\'}}"> <time>{{event.occurred | date: \'dd/MM/yyyy @ h:MM a\'}}</time> <timeline-badge class="{{event.eventType}}"> <i class="fa" ng-class="{\'fa-clock-o\': event.eventType == \'scheduled\',\n'+"                                                'fa-cloud-upload': event.eventType == 'promoted',\n                                                'fa-plus': event.eventType == 'created'}\"></i> </timeline-badge> <timeline-panel class=\"{{event.eventType}}\"> <timeline-heading> <span>{{event.eventType}} by {{event.who}}</span> </timeline-heading> <p>{{event.detail}}</p> </timeline-panel> </timeline-event> </timeline> </div> </md-dialog-content> </md-dialog>"),$templateCache.put("views/toast.html",'<md-toast layout="row" layout-align="center center" flex=""> <span class="md-toast-text">{{vm.message}}</span> <!--<i class="fa fa-times" ng-click="cancel()"></i>--> </md-toast>'),$templateCache.put("views/unauthorized.html",'<!DOCTYPE html> <html lang="en"> <head> <meta charset="UTF-8"> <title>YOU ARE NOT AUTHORIZED TO GET IN HERE</title> </head> <body> <md-dialog layout-align="center center"> YOU ARE NOT AUTHORIZED TO GET IN HERE </md-dialog> </body> </html>'),$templateCache.put("views/webstore-tile-small.html",'<md-card class="tile-small md-whiteframe-z1" flex=""> <a href="#/webstore/apps/{{vm.Tile.appId}}"> <div layout="column"> <!--App Image--> <div layout="row" class="appImage" layout-align="center center"> <img ng-src="{{vm.img}}" alt="Application image"> </div> <!--App Info--> <div class="tile-info" layout="column"> <div style="display: table"> <div style="display: table-cell; vertical-align: middle"> <div class="md-padding">{{vm.Tile.appName}} <md-tooltip>Application name</md-tooltip> </div> </div> </div> <div class="builds-view md-padding"> View Builds </div> </div> </div> </a> </md-card>'),$templateCache.put("views/webstore-view.html",'<div layout="row" layout-align="start" layout-wrap class="main-container"> <title state-title></title> <webstore-tile layout="column" flex access="viewer,promoter,scheduler" permission="{&quot;appId&quot;: &quot;{{buildPackage.appId}}&quot;}" access-permission-type="3" flex-lg="20" flex-gt-sm="25" flex-sm="100" ng-repeat="buildPackage in buildPackages| filter:search" tile="buildPackage"> </webstore-tile> <h1 class="pageBtn"> <md-button ng-click="showNewAppDialog()" aria-label="New App">Create New App</md-button> <md-tooltip>Create a new chrome application</md-tooltip> </h1> </div>'),$templateCache.put("views/wizard-template/wizard.html",'<div> <div class="steps" ng-transclude></div> <ul class="steps-indicator steps-{{getEnabledSteps().length}}" ng-if="!hideIndicators"> <li ng-class="{default: !step.completed && !step.selected, current: step.selected && !step.completed, done: step.completed && !step.selected, editing: step.selected && step.completed}" ng-repeat="step in getEnabledSteps()"> <a ng-click="goTo(step)">{{step.title || step.wzTitle}}</a> </li> </ul> </div>')}]);